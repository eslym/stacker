name: Docker Build and Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [debian, alpine]
        include:
          - distro: debian
            is_default: true
          - distro: alpine
            is_default: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare tags
        id: tags
        run: |
          echo "TAGS<<EOF" >> $GITHUB_ENV

          # Add distribution-specific tags
          echo "type=semver,pattern={{version}}-${{ matrix.distro }}" >> $GITHUB_ENV
          echo "type=semver,pattern={{major}}.{{minor}}-${{ matrix.distro }}" >> $GITHUB_ENV
          echo "type=semver,pattern={{major}}-${{ matrix.distro }}" >> $GITHUB_ENV
          echo "${{ matrix.distro }}" >> $GITHUB_ENV
          echo "latest-${{ matrix.distro }}" >> $GITHUB_ENV

          # Add default tags (without distribution suffix) only for the default distribution
          if [ "${{ matrix.is_default }}" = "true" ]; then
            echo "type=semver,pattern={{version}}" >> $GITHUB_ENV
            echo "type=semver,pattern={{major}}.{{minor}}" >> $GITHUB_ENV
            echo "type=semver,pattern={{major}}" >> $GITHUB_ENV
            echo "latest" >> $GITHUB_ENV
          fi

          echo "EOF" >> $GITHUB_ENV

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: eslym/stacker
          tags: ${{ env.TAGS }}

      # Build and push image for both x64 and arm64
      - name: Build and push ${{ matrix.distro }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            DISTRO=${{ matrix.distro }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
