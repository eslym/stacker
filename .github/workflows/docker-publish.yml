name: Docker Build, Extract Binary, and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  docker:
    name: Build, Extract Binary, and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [debian, alpine]
        include:
          - distro: debian
            is_default: true
            type: glibc
          - distro: alpine
            is_default: false
            type: musl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare tags
        id: tags
        run: |
          TAGS=""
          # Add distribution-specific tags
          TAGS+="type=semver,pattern={{version}}-${{ matrix.distro }}\n"
          TAGS+="type=semver,pattern={{major}}.{{minor}}-${{ matrix.distro }}\n"
          TAGS+="type=semver,pattern={{major}}-${{ matrix.distro }}\n"
          TAGS+="${{ matrix.distro }}\n"
          TAGS+="latest-${{ matrix.distro }}\n"

          # Add default tags (without distribution suffix) only for the default distribution
          if [ "${{ matrix.is_default }}" = "true" ]; then
            TAGS+="type=semver,pattern={{version}}\n"
            TAGS+="type=semver,pattern={{major}}.{{minor}}\n"
            TAGS+="type=semver,pattern={{major}}\n"
            TAGS+="latest\n"
          fi

          # Output tags using correct multi-line syntax
          {
            echo "tags<<EOF"
            echo -e "$TAGS"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: eslym/stacker
          tags: ${{ steps.tags.outputs.tags }}

      # Build and push image for both x64 and arm64
      - name: Build and push ${{ matrix.distro }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            DISTRO=${{ matrix.distro }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Extract binary from built image
      - name: Create container from image
        run: |
          docker create --name extract_container ${{ steps.meta.outputs.tags[0] }}

      - name: Copy binary from container
        run: |
          docker cp extract_container:/app/stacker ./stacker-${{ matrix.distro }}

      - name: Remove container
        run: |
          docker rm extract_container

      # Extract amd64 binary from built image
      - name: Create amd64 container from image
        run: |
          docker create --platform linux/amd64 --name extract_container_amd64 ${{ steps.meta.outputs.tags[0] }}

      - name: Copy amd64 binary from container
        run: |
          docker cp extract_container_amd64:/app/stacker ./stacker-${{ matrix.distro }}-amd64

      - name: Remove amd64 container
        run: |
          docker rm extract_container_amd64

      # Extract arm64 binary from built image
      - name: Create arm64 container from image
        run: |
          docker create --platform linux/arm64 --name extract_container_arm64 ${{ steps.meta.outputs.tags[0] }}

      - name: Copy arm64 binary from container
        run: |
          docker cp extract_container_arm64:/app/stacker ./stacker-${{ matrix.distro }}-arm64

      - name: Remove arm64 container
        run: |
          docker rm extract_container_arm64

      - name: Archive amd64 binary
        run: |
          tar czvf stacker-${{ matrix.distro }}-amd64.tar.gz stacker-${{ matrix.distro }}-amd64

      - name: Archive arm64 binary
        run: |
          tar czvf stacker-${{ matrix.distro }}-arm64.tar.gz stacker-${{ matrix.distro }}-arm64

      - name: Upload Release Asset (amd64)
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: stacker-${{ matrix.type }}-amd64.tar.gz

      - name: Upload Release Asset (arm64)
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: stacker-${{ matrix.type }}-arm64.tar.gz
